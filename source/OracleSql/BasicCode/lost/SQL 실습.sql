SELECT * FROM BOOK; 
SELECT * FROM CUSTOMER;
SELECT * FROM ORDERS;
SELECT * FROM IMPORTED_BOOK;
SELECT * FROM GOODSINFO;
SELECT * FROM NEWBOOK;

--(1) 도서번호가 1인 도서의 이름
SELECT BOOKID, BOOKNAME FROM BOOK WHERE BOOKID='1';

--(2) 가격이 20,000원 이상인 도서의 이름
SELECT BOOKNAME, PRICE FROM BOOK WHERE PRICE>=20000;

--(3) 박지성의 총 구매액
SELECT SUM(SALESPRICE) 총구매액 FROM ORDERS
WHERE CUSTID=(SELECT CUSTID FROM CUSTOMER WHERE NAME='박지성');

SELECT SUM(SALESPRICE) 총구매액 FROM ORDERS, CUSTOMER
WHERE ORDERS.CUSTID=CUSTOMER.CUSTID
AND NAME='박지성';


--(4) 박지성이 구매한 도서의 수
SELECT COUNT(ORDERID) 총구매수 FROM ORDERS
WHERE CUSTID=(SELECT CUSTID FROM CUSTOMER WHERE NAME='박지성');

--(5) 박지성이 구매한 도서의 출판사 수 ***********************************
SELECT COUNT(PUBLISHER) 구매도서출판사수 FROM BOOK
WHERE BOOKID=(SELECT BOOKID FROM ORDERS WHERE CUSTID=1);   

--(6) 박지성이 구매한 도서의 이름, 가격, 정가와 판매가격의 차이
SELECT O.CUSTID, B.BOOKNAME, B.PRICE, O.SALESPRICE,
B.PRICE-O.SALESPRICE "정가와 판매가격 차이"
FROM BOOK B , ORDERS O
WHERE O.CUSTID = (SELECT CUSTID FROM CUSTOMER WHERE NAME='박지성')
AND B.BOOKID = O.BOOKID;

--(7) 박지성이 구매하지 않은 도서의 이름
SELECT O.CUSTID, B.BOOKNAME
FROM BOOK B , ORDERS O
WHERE O.CUSTID <> (SELECT CUSTID FROM CUSTOMER WHERE NAME='박지성')
AND B.BOOKID = O.BOOKID;

--2. 마당서점의 운영자와 경영자가 요구하는 다음 질문에 대해 SQL 문을 작성하시오.

--(1) 마당서점 도서의 총 개수
SELECT ((SELECT COUNT(BOOKID) FROM BOOK)+
(SELECT COUNT(BOOKID) FROM IMPORTED_BOOK)) "마당서점 총 도서수" FROM DUAL;

--(2) 마당서점에 도서를 출고하는 출판사의 총 개수
SELECT ((SELECT COUNT(DISTINCT(PUBLISHER)) FROM BOOK)+
(SELECT COUNT(DISTINCT(PUBLISHER)) FROM IMPORTED_BOOK)) "마당서점 총 출판사수" FROM DUAL;

--(3) 모든 고객의 이름, 주소
SELECT CUSTID, NAME, ADDRESS FROM CUSTOMER;

--(4) 2014년 7월 4일~7월 7일 사이에 주문받은 도서의 주문번호
SELECT ORDERID, BOOKID FROM ORDERS
WHERE ORDERDATE BETWEEN '20140704' AND '20140707';

--(5) 2014년 7월 4일~7월 7일 사이에 주문받은 도서를 제외한 도서의 주문번호
SELECT ORDERID, BOOKID FROM ORDERS
WHERE ORDERDATE NOT BETWEEN '20140704' AND '20140707';
--(6) 성이 ‘김’ 씨인 고객의 이름과 주소
SELECT NAME, ADDRESS FROM CUSTOMER
WHERE SUBSTR(NAME, 1, 1)='김';
SELECT NAME, ADDRESS FROM CUSTOMER
WHERE NAME LIKE '김%';
--(7) 성이 ‘김’ 씨이고 이름이 ‘아’로 끝나는 고객의 이름과 주소
SELECT NAME, ADDRESS FROM CUSTOMER
WHERE NAME LIKE '김%아';
--(8) 주문하지 않은 고객의 이름(부속질의 사용)
SELECT CUSTID, NAME FROM CUSTOMER
WHERE CUSTID = (SELECT CUSTID FROM ORDERS);
--(9) 주문 금액의 총액과 주문의 평균 금액
SELECT SUM(SALESPRICE) 총주문금액, AVG(SALESPRICE) 평균주문금액
FROM ORDERS;
--(10) 고객의 이름과 고객별 구매액
--SELECT CUSTID, NAME FROM CUSTOMER;
--SELECT CUSTID, SUM(SALESPRICE) as SUM_SPRICE FROM ORDERS GROUP BY CUSTID;

-- 윤선이 방법
SELECT C.CUSTID, NAME, SUM(SALESPRICE) as SUM_SPRICE
FROM CUSTOMER C, ORDERS O
WHERE C.CUSTID = O.CUSTID
GROUP BY C.CUSTID, NAME;

-- NATURAL
SELECT CUSTID, NAME, SUM(SALESPRICE) as SUM_SPRICE
FROM CUSTOMER
NATURAL JOIN ORDERS
GROUP BY CUSTID, NAME;


-- USING
SELECT CUSTID, NAME, SUM(SALESPRICE) as SUM_SPRICE
FROM CUSTOMER
--INNER JOIN ORDERS
JOIN ORDERS
USING(CUSTID)
GROUP BY CUSTID, NAME;


SELECT C.CUSTID, C.NAME, SUM(O.SALESPRICE) as SUM_SPRICE
FROM CUSTOMER C
JOIN ORDERS O ON C.CUSTID = O.CUSTID
GROUP BY C.CUSTID, C.NAME;

--(11) 고객의 이름과 고객이 구매한 도서 목록
--SELECT NAME, BOOKNAME
--FROM CUSTOMER C, BOOK B, ORDERS O
--JOIN ORDERS ON C.CUSTID = O.CUSTID;

SELECT NAME FROM CUSTOMER;

SELECT CUSTID, BOOKID
FROM ORDERS;

SELECT C.NAME, O.BOOKID FROM ORDERS O
RIGHT JOIN CUSTOMER C ON O.CUSTID = C.CUSTID
;


SELECT O.NAME, B.BOOKNAME FROM BOOK B
RIGHT JOIN (
    SELECT C.NAME, O.BOOKID FROM ORDERS O
    RIGHT JOIN CUSTOMER C ON O.CUSTID = C.CUSTID
) O ON O.BOOKID = B.BOOKID;


--(12) 도서의 가격(Book 테이블)과 판매가격(Orders 테이블)의 차이가 가장 많은 주문
SELECT O.ORDERID 주문번호, B.PRICE-O.SALESPRICE 판매가차이
FROM ORDERS O, BOOK B
WHERE B.BOOKID = O.BOOKID;

SELECT MAX(B.PRICE-O.SALESPRICE) 판매가차이
FROM ORDERS O, BOOK B
WHERE B.BOOKID = O.BOOKID;
-- ***************************

--(13) 도서의 판매액 평균보다 자신의 구매액 평균이 더 높은 고객의 이름
-- **************

--3. 마당서점에서 다음의 심화된 질문에 대해 SQL 문을 작성하시오.

--(1) 박지성이 구매한 도서의 출판사와 같은 출판사에서 도서를 구매한 고객의 이름
--
--(2) 두 개 이상의 서로 다른 출판사에서 도서를 구매한 고객의 이름
--
--(3) 전체 고객의 30% 이상이 구매한 도서


