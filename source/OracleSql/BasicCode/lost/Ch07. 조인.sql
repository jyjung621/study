-- EMP, DEPP TABLE의 CARTESIAN PRODUCT의 결과와 동일함
-- CARTESIAN을 CROSS-JOIN이라고도 함
SELECT * FROM EMP, DEPT;

SELECT * FROM EMP, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO;

SELECT ENAME, DNAME
FROM EMP, DEPT
WHERE EMP.DEPTNO=DEPT.DEPTNO
AND ENAME = 'SCOTT';

SELECT ENAME, DNAME, DEPT.DEPTNO
FROM EMP, DEPT
WHERE EMP.DEPTNO=DEPT.DEPTNO
AND ENAME = 'SCOTT';

SELECT E.ENAME, D.DNAME, E.DEPTNO, D.DEPTNO
FROM EMP E, DEPT D
WHERE E.DEPTNO=D.DEPTNO
AND E.ENAME = 'SCOTT';

-- 뉴욕에서 근무하는 사원의 이름과 급여를 출력하시오
SELECT ENAME, SAL
FROM EMP, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO
AND dept.loc='NEW YORK';

-- ACCOUNTING 부서 소속 사원의 이름과 입사일을 출력하시오
SELECT ENAME, HIREDATE
FROM EMP, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO
AND DEPT.DNAME='ACCOUNTING';

-- 직급이 MANAGER인 사원의 이름, 부서명을 출력하시오
SELECT ENAME, DEPT.DNAME
FROM EMP, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO
AND EMP.JOB='MANAGER'
ORDER BY DNAME; 

-- 각 사원의 SAL에 해당하는 GRADE는?
SELECT * FROM SALGRADE;
SELECT ENAME, SAL, GRADE, LOSAL, HISAL
FROM EMP, SALGRADE
ORDER BY ENAME;

SELECT * FROM SALGRADE;
SELECT ENAME, SAL, GRADE
FROM EMP, SALGRADE
WHERE SAL BETWEEN LOSAL AND HISAL;

-- SELF JOIN : 같은 TABLE을 가지고 JOIN하는 것을 말함
-- 사원 이름과 MANAGER 이름을 출력하라
SELECT EMPLOYEE.ENAME || '의 매니저는' || MANAGER.ENAME || '입니다.'
FROM EMP EMPLOYEE, EMP MANAGER
WHERE EMPLOYEE.MGR = MANAGER.EMPNO;
-- OUTER JOIN(외부조인)
-- 종류 : LEFT OUTER JOIN, RIGHT OUTER JOIN, FULL OUTER JOIN
-- 아래 SQL은 LEFT OUTER JOIN임
SELECT EMPLOYEE.ENAME || '의 매니저는' || MANAGER.ENAME || '입니다.'
FROM EMP EMPLOYEE, EMP MANAGER
WHERE EMPLOYEE.MGR = MANAGER.EMPNO(+);

-- 매니저가 KING인 사원들의 이름과 직급을 출력하시오
SELECT EMPLOYEE.ENAME, EMPLOYEE.JOB
FROM EMP EMPLOYEE, EMP MANAGER
WHERE EMPLOYEE.MGR = MANAGER.EMPNO
AND MANAGER.ENAME = 'KING';

-- SCOTT과 동일한 근무지에서 근무하는 사원의 이름을 출력하시오
-- 근무지가 같다는 이야기는 DEPTNO가 같다는 의미임
SELECT EMPLOYEE.ENAME 스콧, COLLEAGUE.ENAME 동료
FROM EMP EMPLOYEE, EMP COLLEAGUE
WHERE EMPLOYEE.DEPTNO = COLLEAGUE.DEPTNO
AND EMPLOYEE.ENAME = 'SCOTT'
-- 같은 사람은 제외
AND EMPLOYEE.ENAME <> COLLEAGUE.ENAME;

-- ANSI(American National Standard Institutions)
-- ANSI JOIN : ANSI에서 만든 JOIN관련 SQL 문법 표준

-- 1. ANSI CROSS JOIN
SELECT * FROM EMP CROSS JOIN DEPT;

-- ANSI INNER JOIN => EQUI-JOIN임
SELECT ENAME, DNAME
FROM EMP INNER JOIN DEPT
ON EMP.DEPTNO = DEPT.DEPTNO
WHERE ENAME = 'SCOTT';

SELECT ENAME, DNAME
FROM EMP INNER JOIN DEPT
USING (DEPTNO)
WHERE ENAME = 'SCOTT';

-- ANSI NATURAL JOIN : EQUI-JOIN에서 중복된 컬럼(속성) 제거
SELECT EMP.ENAME, DEPT.DNAME
FROM EMP NATURAL JOIN DEPT;

-- OUTER JOIN (LEFT, RIGHT, FULL)
-- 1. 실습환경 꾸미기 (DEPT01 TABLE 생성 및 데이터 INSERT)
DROP TABLE DEPT01;
CREATE TABLE DEPT01(DEPTNO NUMBER(2), DNAME VARCHAR2(14));
INSERT INTO DEPT01 VALUES(10, 'ACCOUNTING');
INSERT INTO DEPT01 VALUES(20, 'RESEARCH');
SELECT * FROM DEPT01;

CREATE TABLE DEPT02(DEPTNO NUMBER(2), DNAME VARCHAR2(14));
INSERT INTO DEPT02 VALUES(10, 'ACCOUNTING');
INSERT INTO DEPT02 VALUES(30, 'SALES');
SELECT * FROM DEPT02;

-- ANSI LEFT OUTER JOIN 실습
SELECT * FROM DEPT01 LEFT OUTER JOIN DEPT02
USING (DEPTNO);
--ON DEPT01.DEPTNO = DEPT02.DEPTNO;

-- ANSI RIGHT OUTER JOIN 실습
SELECT * FROM DEPT01 RIGHT OUTER JOIN DEPT02
USING (DEPTNO);


-- ANSI FULL OUTER JOIN 실습
SELECT * FROM DEPT01 FULL OUTER JOIN DEPT02
USING (DEPTNO);
